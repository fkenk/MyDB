/**
 * This class is generated by jOOQ
 */
package test.generated.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.4" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProductsRecord extends org.jooq.impl.UpdatableRecordImpl<test.generated.tables.records.ProductsRecord> implements org.jooq.Record3<java.lang.Integer, java.lang.String, java.lang.Double> {

	private static final long serialVersionUID = -123944953;

	/**
	 * Setter for <code>kursschema.products.idProducts</code>.
	 */
	public void setIdproducts(java.lang.Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>kursschema.products.idProducts</code>.
	 */
	public java.lang.Integer getIdproducts() {
		return (java.lang.Integer) getValue(0);
	}

	/**
	 * Setter for <code>kursschema.products.Name</code>.
	 */
	public void setName(java.lang.String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>kursschema.products.Name</code>.
	 */
	public java.lang.String getName() {
		return (java.lang.String) getValue(1);
	}

	/**
	 * Setter for <code>kursschema.products.Price</code>.
	 */
	public void setPrice(java.lang.Double value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>kursschema.products.Price</code>.
	 */
	public java.lang.Double getPrice() {
		return (java.lang.Double) getValue(2);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.lang.Integer> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record3 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row3<java.lang.Integer, java.lang.String, java.lang.Double> fieldsRow() {
		return (org.jooq.Row3) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row3<java.lang.Integer, java.lang.String, java.lang.Double> valuesRow() {
		return (org.jooq.Row3) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field1() {
		return test.generated.tables.Products.PRODUCTS.IDPRODUCTS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field2() {
		return test.generated.tables.Products.PRODUCTS.NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Double> field3() {
		return test.generated.tables.Products.PRODUCTS.PRICE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value1() {
		return getIdproducts();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value2() {
		return getName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Double value3() {
		return getPrice();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProductsRecord value1(java.lang.Integer value) {
		setIdproducts(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProductsRecord value2(java.lang.String value) {
		setName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProductsRecord value3(java.lang.Double value) {
		setPrice(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProductsRecord values(java.lang.Integer value1, java.lang.String value2, java.lang.Double value3) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached ProductsRecord
	 */
	public ProductsRecord() {
		super(test.generated.tables.Products.PRODUCTS);
	}

	/**
	 * Create a detached, initialised ProductsRecord
	 */
	public ProductsRecord(java.lang.Integer idproducts, java.lang.String name, java.lang.Double price) {
		super(test.generated.tables.Products.PRODUCTS);

		setValue(0, idproducts);
		setValue(1, name);
		setValue(2, price);
	}
}
